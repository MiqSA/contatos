{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grego\\\\Documents\\\\contatos\\\\frontend\\\\src\\\\PessoaCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport PessoasService from './PessoasService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pessoasService = new PessoasService();\n\nclass PessoaCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      pessoasService.getPessoa(params.pk).then(c => {\n        this.refs.nome.value = c.nome;\n      });\n    }\n  }\n\n  handleCreate() {\n    pessoasService.createPessoa({\n      \"nome\": this.refs.nome.value\n    }).then(result => {\n      alert(\"Pessoa Inserida com Sucesso!\");\n      window.location.href = \"/\";\n    }).catch(() => {\n      pessoasService.getTelefonesByURL('/contatoapi/pessoa/?nome=' + this.refs.nome.value).then(c => {\n        var pessoa = c.nome;\n\n        if (pessoa != '') {\n          alert('Não é possível inserir uma pessoa já cadastrada!');\n        }\n      });\n    });\n  }\n\n  handleUpdate(pk) {\n    pessoasService.updatePessoa({\n      \"pk\": pk,\n      \"nome\": this.refs.nome.value\n    }).then(result => {\n      alert(\"Pessoa Atualizada com Sucesso!\");\n      window.location.href = \"/\";\n    }).catch(() => {\n      pessoasService.getPessoasByURL('/contatoapi/pessoa/?nome=' + this.refs.nome.value).then(c => {\n        var pessoa = c.nome;\n\n        if (pessoa != '') {\n          alert('Não é possível inserir uma pessoa já cadastrada!');\n        }\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate();\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          ref: \"nome\",\n          id: \"nome\",\n          required: \"required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-primary\",\n          href: \"/\",\n          children: \" Retornar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PessoaCreateUpdate;","map":{"version":3,"sources":["C:/Users/grego/Documents/contatos/frontend/src/PessoaCreateUpdate.js"],"names":["React","Component","PessoasService","pessoasService","PessoaCreateUpdate","constructor","props","handleSubmit","bind","componentDidMount","match","params","pk","getPessoa","then","c","refs","nome","value","handleCreate","createPessoa","result","alert","window","location","href","catch","getTelefonesByURL","pessoa","handleUpdate","updatePessoa","getPessoasByURL","event","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PessoasService from './PessoasService';\n\nconst pessoasService = new PessoasService();\n\nclass PessoaCreateUpdate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      componentDidMount(){\n        const { match: { params } } = this.props;\n        if(params && params.pk)\n        {\n          pessoasService.getPessoa(params.pk).then((c)=>{\n            this.refs.nome.value = c.nome;\n          })\n        }\n      }\n\n      handleCreate(){\n        pessoasService.createPessoa(\n          {\n            \"nome\": this.refs.nome.value,\n        }\n        ).then((result)=>{\n          alert(\"Pessoa Inserida com Sucesso!\");\n          window.location.href = \"/\";\n        }).catch(()=>{\n          pessoasService.getTelefonesByURL('/contatoapi/pessoa/?nome='+this.refs.nome.value).then((c)=>{\n            var pessoa = c.nome;\n            if(pessoa  != ''){\n              alert('Não é possível inserir uma pessoa já cadastrada!');\n            }\n          })\n        });\n      }\n      handleUpdate(pk){\n        pessoasService.updatePessoa(\n          {\n            \"pk\": pk,\n            \"nome\": this.refs.nome.value,\n        }\n        ).then((result)=>{\n          alert(\"Pessoa Atualizada com Sucesso!\");\n          window.location.href = \"/\";\n        }).catch(()=>{ \n            pessoasService.getPessoasByURL('/contatoapi/pessoa/?nome='+this.refs.nome.value).then((c)=>{\n              var pessoa = c.nome;\n              if(pessoa  != ''){\n                alert('Não é possível inserir uma pessoa já cadastrada!');\n              }\n            })\n        });\n      }\n      handleSubmit(event) {\n        const { match: { params } } = this.props;\n\n        if(params && params.pk){\n          this.handleUpdate(params.pk);\n        }\n        else\n        {\n          this.handleCreate();\n        }\n\n        event.preventDefault();\n      }\n\n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Nome:</label>\n              <input className=\"form-control\" type=\"text\" ref='nome' id='nome' required='required'/>\n              <br/>\n              <a className=\"btn btn-primary\"  href={\"/\"}> Retornar</a>&nbsp;&nbsp;\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Salvar\" />\n            </div>\n          </form>\n        );\n      }\n}\n\nexport default PessoaCreateUpdate;"]},"metadata":{},"sourceType":"module"}